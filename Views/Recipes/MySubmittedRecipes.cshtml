@model IEnumerable<JamesThewProject.Models.Recipe>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "My Submitted Recipes";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var query = Context.Request.Query;
    // Xác định thứ tự sắp xếp mặc định: nếu không có thì mặc định là "title_asc"
    var initialSort = query["sortOrder"].ToString();
    if (string.IsNullOrEmpty(initialSort))
    {
        initialSort = "title_asc";
    }
}

<div class="container my-recipes-container mt-5">
    <h2 class="section-title">My Submitted Recipes</h2>

    <!-- Form Tìm kiếm & Sắp xếp (trên cùng 1 hàng, không có nút submit) -->
    <form id="searchForm" method="get" action="@Url.Action("MySubmittedRecipes", "Recipes")" class="mb-4 d-flex align-items-center gap-2">
        <input type="text" id="searchString" name="searchString" value="@(query["searchString"])" placeholder="Search recipes..." class="form-control" style="max-width:300px;" />
        <button type="button" id="toggleSort" class="btn btn-secondary">
            @if (initialSort == "title_desc")
            {
                @:Sort: Z-A
            }
            else
            {
                @:Sort: A-Z
            }
        </button>
    </form>

    <div id="submittedRecipesContainer">
        @if (!Model.Any())
        {
            <div class="alert alert-info text-center">
                You haven't submitted any recipes yet.
            </div>
        }
        else
        {
            <div class="recipe-list">
                @foreach (var recipe in Model)
                {
                    <div class="recipe-card">
                        <div class="recipe-img">
                            <img src="@recipe.ImageUrl" alt="@recipe.Title" onerror="this.src='/images/default-recipe.jpg';" />
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@recipe.Title</h5>
                            @if (!string.IsNullOrEmpty(recipe.Description))
                            {
                                <p class="card-text">@recipe.Description</p>
                            }
                            <!-- Hiển thị Rating dưới dạng sao -->
                            @{
                                double avgRating = recipe.AverageRating;
                                int fullStars = (int)Math.Floor(avgRating);
                                int emptyStars = 5 - fullStars;
                            }
                            <div class="rating mb-2">
                                <strong>Rating:</strong>
                                @for (int i = 0; i < fullStars; i++)
                                {
                                    <i class="bi bi-star-fill" style="color: gold;"></i>
                                }
                                @for (int i = 0; i < emptyStars; i++)
                                {
                                    <i class="bi bi-star" style="color: gold;"></i>
                                }
                            </div>
                            <a href="@Url.Action("Details", "Recipes", new { id = recipe.RecipeId })" class="btn-view" title="View Details">
                                <i class="bi bi-eye-fill"></i>
                            </a>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<!-- jQuery và Script AJAX -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    var currentSortOrder = '@initialSort';

    function loadRecipes() {
        var searchString = $("#searchString").val();
        $.ajax({
            url: '@Url.Action("MySubmittedRecipes", "Recipes")',
            data: { searchString: searchString, sortOrder: currentSortOrder },
            type: 'GET',
            success: function(result) {
                var newContent = $(result).find("#submittedRecipesContainer").html();
                $("#submittedRecipesContainer").html(newContent);
            },
            error: function(xhr, status, error) {
                console.error("AJAX error: " + error);
            }
        });
    }

    $(document).ready(function(){
        $("#searchString").on("keyup", function(){
            loadRecipes();
        });

        $("#toggleSort").on("click", function(){
            if(currentSortOrder === "title_asc") {
                currentSortOrder = "title_desc";
                $(this).text("Sort: Z-A");
            } else {
                currentSortOrder = "title_asc";
                $(this).text("Sort: A-Z");
            }
            loadRecipes();
        });

        $("#searchForm").on("submit", function(e){
            e.preventDefault();
            loadRecipes();
        });
    });
</script>

<style>
    /* Container của trang Submitted Recipes */
    .my-recipes-container {
        max-width: 1000px;
        margin: auto;
        padding: 20px;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);
    }

    .section-title {
        text-align: center;
        font-weight: bold;
        color: #d2691e;
        margin-bottom: 25px;
        font-size: 26px;
    }

    /* Sử dụng grid để hiển thị card, responsive */
    .recipe-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    /* Mỗi card hiển thị 1 công thức với nền (giả sử dùng hình menu2.jpg) */
    .recipe-card {
        background: url('/image/menu2.jpg') no-repeat center center;
        background-size: cover;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease-in-out;
        display: flex;
        flex-direction: column;
    }

        .recipe-card:hover {
            transform: translateY(-5px);
        }

    /* Phần hình ảnh của card */
    .recipe-img img {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-bottom: 3px solid #d2691e;
    }

    /* Phần nội dung của card, đặt trong nền trắng mờ để chữ dễ đọc */
    .card-body {
        background-color: rgba(255, 255, 255, 0.7);
        padding: 15px;
        color: #333;
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .card-title {
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .card-text {
        color: #555;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        margin-bottom: 1rem;
    }

    .rating {
        font-size: 0.95rem;
        margin-bottom: 0.5rem;
    }

    /* Nút xem chi tiết: sử dụng icon con mắt */
    .btn-view {
        background-color: #2980b9;
        color: #fff;
        padding: 8px 12px;
        font-size: 16px;
        font-weight: bold;
        border-radius: 8px;
        transition: 0.3s;
        text-decoration: none;
        margin-right: 5px;
        border: none;
    }

        .btn-view:hover {
            background-color: #3498db;
            transform: scale(1.05);
        }
</style>
