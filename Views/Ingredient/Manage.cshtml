@model IEnumerable<JamesThewProject.Models.Ingredient>

@{
    ViewData["Title"] = "Manage Ingredients";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var query = Context.Request.Query;
}

<div class="container py-5">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-5">
        <h1 class="display-5 fw-bold text-gradient">Manage Ingredients</h1>
        <a class="btn btn-add-new" href="@Url.Action("Create", "Ingredient")">+ Add Ingredient</a>
    </div>

    <!-- Search & Sort -->
    <form method="get" action="@Url.Action("Manage", "Ingredient")" class="mb-5">
        <div class="row g-3 align-items-center">
            <div class="col-md-6 col-lg-4 position-relative">
                <input type="text" name="searchString" value="@(query["searchString"])"
                       placeholder="Search ingredients..." class="form-control search-input" />
                <span class="search-icon" onclick="this.closest('form').submit();">
                    <i class="bi bi-search"></i>
                </span>
            </div>
            <div class="col-md-6 col-lg-4">
                <select name="sortOrder" class="form-control sort-select" onchange="this.form.submit();">
                    <option value="">Sort by</option>
                    <option value="name_asc" @(query["sortOrder"] == "name_asc" ? "selected" : "")>Name (A-Z)</option>
                    <option value="name_desc" @(query["sortOrder"] == "name_desc" ? "selected" : "")>Name (Z-A)</option>
                    <option value="unit_asc" @(query["sortOrder"] == "unit_asc" ? "selected" : "")>Unit (A-Z)</option>
                    <option value="unit_desc" @(query["sortOrder"] == "unit_desc" ? "selected" : "")>Unit (Z-A)</option>
                </select>
            </div>
        </div>
    </form>

    <!-- Table -->
    <div class="card recipe-table shadow-lg">
        <div class="card-body p-0">
            <table class="table table-hover mb-0">
                <thead class="table-header">
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Unit</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model?.Any() == true)
                    {
                        foreach (var ingredient in Model)
                        {
                            <tr class="table-row">
                                <td class="name-cell">@ingredient.Name</td>
                                <td class="unit-cell">@ingredient.DefaultUnit</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="2" class="text-center py-4 text-muted no-data">No ingredients found yet!</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

<style>
    /* Gradient Text for Title */
    .text-gradient {
        background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        font-size: 2.5rem;
    }

    /* Add New Button */
    .btn-add-new {
        background: linear-gradient(135deg, #00c4cc, #7b2cbf);
        border: none;
        padding: 10px 20px;
        font-weight: bold;
        color: white;
        border-radius: 25px;
        box-shadow: 0 4px 15px rgba(0, 196, 204, 0.3);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .btn-add-new:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0, 196, 204, 0.5);
            color: white;
        }

    /* Search Input */
    .search-input {
        padding: 12px 40px 12px 15px;
        border: 2px solid #00c4cc;
        border-radius: 10px;
        font-size: 1rem;
        transition: border-color 0.3s ease;
    }

        .search-input:focus {
            border-color: #7b2cbf;
            box-shadow: 0 0 5px rgba(123, 44, 191, 0.5);
            outline: none;
        }

    .search-icon {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        color: #00c4cc;
        font-size: 1.2rem;
        transition: color 0.3s ease;
    }

        .search-icon:hover {
            color: #7b2cbf;
        }

    /* Sort Select */
    .sort-select {
        padding: 12px;
        border: 2px solid #00c4cc;
        border-radius: 10px;
        background-color: #f8f9fa;
        transition: border-color 0.3s ease;
    }

        .sort-select:focus {
            border-color: #7b2cbf;
            box-shadow: 0 0 5px rgba(123, 44, 191, 0.5);
            outline: none;
        }

    /* Recipe Table */
    .recipe-table {
        border-radius: 15px;
        overflow: hidden;
        background: white;
    }

    .table-header {
        background: linear-gradient(90deg, #7b2cbf, #00c4cc);
        color: white;
        text-transform: uppercase;
        font-weight: bold;
    }

    .table-row {
        transition: background-color 0.3s ease;
    }

        .table-row:hover {
            background-color: rgba(0, 196, 204, 0.1);
        }

    .name-cell {
        font-weight: 500;
        color: #343a40;
        padding: 15px;
    }

    .unit-cell {
        color: #7b2cbf;
        font-weight: 600;
        padding: 15px;
    }

    .no-data {
        font-style: italic;
        color: #ff6b6b;
    }
</style>