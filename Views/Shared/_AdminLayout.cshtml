@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - Admin Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous" />
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>
<body class="bg-light">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark shadow-sm fixed-top" style="background: linear-gradient(90deg, #1e3c72, #2a69ac);">
        <div class="container-fluid">
            <a class="navbar-brand fw-bold" href="@Url.Action("Dashboard", "Admin")">Admin Panel</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarContent">
                <ul class="navbar-nav ms-auto align-items-center">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-person-circle me-2"></i>Welcome, @HttpContextAccessor.HttpContext?.Session.GetString("UserEmail")
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="userDropdown">
                            <li><a class="dropdown-item text-danger" href="@Url.Action("ChangePassword", "Admin")">Change Password</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item text-danger" href="@Url.Action("Logout", "Account")">Logout</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Layout -->
    <div class="d-flex">
        <!-- Sidebar -->
        <nav class="sidebar bg-dark shadow-lg" id="sidebar">
            <div class="sidebar-header text-center py-4">
                <h5 class="text-white fw-bold">Admin Menu</h5>
            </div>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Dashboard", "Admin")">
                        <i class="bi bi-speedometer2 me-2"></i> Dashboard
                    </a>
                </li>
                @* Chỉ hiển thị mục Manage Users nếu role không phải Manager *@
                @if ((HttpContextAccessor.HttpContext?.Session.GetString("UserRole") ?? "User") != "Manager")
                {
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("ManageUsers", "Admin")">
                            <i class="bi bi-people me-2"></i> Manage Users
                        </a>
                    </li>
                }
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Manage", "Ingredient")">
                        <i class="bi bi-list-ul me-2"></i> Manage Ingredients
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("ManageRecipes", "Recipes")">
                        <i class="bi bi-book me-2"></i> Manage Recipes
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("ManageContests", "Contest")">
                        <i class="bi bi-trophy me-2"></i> Manage Contests
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("ManageAnnouncements", "Announcement")">
                        <i class="bi bi-megaphone me-2"></i> Announcements
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("ManageFeedback", "Admin")">
                        <i class="bi bi-chat-dots me-2"></i> Manage Feedback
                    </a>
                </li>
                @* Chỉ hiển thị mục Manage Plans nếu role không phải Manager *@
                @if ((HttpContextAccessor.HttpContext?.Session.GetString("UserRole") ?? "User") != "Manager")
                {
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("ManagePlans", "Admin")">
                            <i class="bi bi-wallet2 me-2"></i> Manage Plans
                        </a>
                    </li>
                }
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("ManageComments", "Admin")">
                        <i class="bi bi-chat-left-text me-2"></i> Manage Comments
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Index", "BannedWords")">
                        <i class="bi bi-x-circle me-2"></i> Manage Banned
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Main Content -->
        <main class="main-content flex-grow-1 p-4">
            @RenderBody()
        </main>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    @RenderSection("Scripts", required: false)

    <style>
        /* Sidebar */
        .sidebar {
            width: 250px;
            min-height: 100vh;
            position: fixed;
            top: 0;
            left: 0;
            background: linear-gradient(180deg, #1e3c72 0%, #2a69ac 100%);
            transition: transform 0.3s ease;
            z-index: 1000;
        }

        .sidebar-header {
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .sidebar .nav-link {
            color: rgba(255, 255, 255, 0.9);
            padding: 12px 20px;
            transition: all 0.3s ease;
        }

            .sidebar .nav-link:hover {
                background-color: rgba(255, 255, 255, 0.1);
                color: white;
                padding-left: 25px;
            }

            .sidebar .nav-link i {
                width: 20px;
            }

        /* Main Content */
        .main-content {
            margin-left: 250px;
            min-height: 100vh;
            background-color: #f8f9fa;
            padding-top: 120px !important;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .sidebar {
                transform: translateX(-250px);
            }

                .sidebar.active {
                    transform: translateX(0);
                }

            .main-content {
                margin-left: 0;
                padding-top: 90px !important;
            }
        }

        /* Navbar */
        .navbar {
            z-index: 1100;
        }

        .dropdown-menu {
            border: none;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .dropdown-item:hover {
            background-color: #e9ecef;
        }
    </style>

    <script>
        // Toggle Sidebar on Mobile
        document.querySelector('.navbar-toggler').addEventListener('click', function () {
            document.getElementById('sidebar').classList.toggle('active');
        });

        // Dynamically adjust padding-top of main content based on navbar height
        window.addEventListener('load', function () {
            const navbar = document.querySelector('.navbar');
            const mainContent = document.querySelector('.main-content');
            if (navbar && mainContent) {
                const navbarHeight = navbar.offsetHeight;
                mainContent.style.paddingTop = (navbarHeight + 10) + 'px';
            }
        });

        // Update padding-top on window resize
        window.addEventListener('resize', function () {
            const navbar = document.querySelector('.navbar');
            const mainContent = document.querySelector('.main-content');
            if (navbar && mainContent) {
                const navbarHeight = navbar.offsetHeight;
                mainContent.style.paddingTop = (navbarHeight + 10) + 'px';
            }
        });
    </script>
</body>
</html>
