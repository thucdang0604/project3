@model JamesThewProject.Models.Recipe
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    var userRole = HttpContextAccessor.HttpContext?.Session.GetString("UserRole") ?? "User";
    int? currentUserId = HttpContextAccessor.HttpContext?.Session.GetInt32("UserId");
    Layout = userRole == "Admin" ? "~/Views/Shared/_AdminLayout.cshtml" : "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = Model.Title;
    var userRating = currentUserId != null ? Model.RecipeRatings.FirstOrDefault(r => r.UserId == currentUserId) : null;
}

<style>
    .recipe-container {
        max-width: 800px;
        margin: 50px auto;
        padding: 20px;
        background: #fff8f0;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        font-family: 'Merriweather', serif;
        color: #4a4a4a;
    }

        .recipe-container h2 {
            font-size: 32px;
            text-align: center;
            color: #d35400;
            margin-bottom: 20px;
            text-transform: uppercase;
            border-bottom: 2px solid #d35400;
            padding-bottom: 10px;
        }

        .recipe-container .img-fluid {
            width: 100%;
            max-height: 400px;
            border-radius: 12px;
            object-fit: cover;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        .recipe-container .mb-3 {
            margin-bottom: 25px;
            padding: 15px;
            border-radius: 8px;
            background: rgba(255, 245, 230, 0.8);
            box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);
        }

        .recipe-container h4 {
            font-size: 24px;
            color: #c0392b;
            text-transform: uppercase;
            border-bottom: 2px dashed #c0392b;
            padding-bottom: 5px;
        }

    .rating-section {
        margin: 30px 0;
        padding: 15px;
        background: rgba(255, 245, 230, 0.95);
        border-radius: 8px;
        text-align: center;
    }

    .rating-stars {
        font-size: 28px;
        color: #f1c40f;
        margin-bottom: 10px;
    }

    .star-rating {
        display: inline-block;
    }

        .star-rating span {
            font-size: 32px;
            cursor: pointer;
            color: #ccc;
            margin: 0 2px;
        }

        .star-rating .filled {
            color: gold;
        }

    .rating-form label {
        font-size: 18px;
        font-weight: bold;
        margin-right: 10px;
    }

    .instructions {
        white-space: pre-line;
    }
    .comment-section {
        margin-top: 30px;
    }

        .comment-section h4 {
            font-size: 22px;
            color: #8e44ad;
            margin-bottom: 15px;
        }

    .comment-item {
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 6px;
        margin-bottom: 10px;
    }

        .comment-item strong {
            color: #2c3e50;
        }

        .comment-item small {
            color: #7f8c8d;
        }
</style>

<div class="recipe-container mt-4">
    <h2>@Model.Title</h2>

    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <div class="mb-3">
            <img src="@Model.ImageUrl" alt="@Model.Title" class="img-fluid" />
        </div>
    }

    <div class="mb-3">
        <p><strong>Servings:</strong> @Model.Servings</p>
        <p>
            <strong>Created by:</strong> @Model.Creator?.FullName
            on @Model.CreatedAt.ToString("g")
        </p>
    </div>

    @if (!string.IsNullOrEmpty(Model.Description))
    {
        <div class="mb-3">
            <h4>Description</h4>
            <p>@Model.Description</p>
        </div>
    }

    <div class="mb-3">
        <h4>Instructions</h4>
        <p class="instructions">@Model.Instructions</p>

    </div>

    <div class="mb-3">
        <h4>Ingredients</h4>
        @if (Model.RecipeIngredients != null && Model.RecipeIngredients.Any())
        {
            <ul>
                @foreach (var ri in Model.RecipeIngredients)
                {
                    <li>
                        @ri.Ingredient.Name (@ri.Ingredient.DefaultUnit) : @ri.Quantity
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No ingredients available.</p>
        }
    </div>

    <div class="rating-section">
        <h4>Rating</h4>
        <p><strong>Average Rating:</strong> @Model.AverageRating.ToString("0.0") / 5</p>
        <div class="rating-stars">
            @for (int i = 1; i <= 5; i++)
            {
                if (i <= Math.Floor(Model.AverageRating))
                {
                    <i class="bi bi-star-fill"></i>
                }
                else
                {
                    <i class="bi bi-star"></i>
                }
            }
        </div>
        @if (currentUserId != null)
        {
            <div class="rating-form">
                @if (userRating != null)
                {
                    <p>Your rating: <strong id="currentRating">@userRating.Rating</strong></p>
                    <form method="post" action="@Url.Action("SubmitRating", "Recipes")">
                        <input type="hidden" name="recipeId" value="@Model.RecipeId" />
                        <input type="hidden" name="rating" id="ratingInput" value="@userRating.Rating" />
                        <div class="star-rating" id="starRating">
                            <span data-value="1"><i class="bi bi-star-fill"></i></span>
                            <span data-value="2"><i class="bi bi-star-fill"></i></span>
                            <span data-value="3"><i class="bi bi-star-fill"></i></span>
                            <span data-value="4"><i class="bi bi-star-fill"></i></span>
                            <span data-value="5"><i class="bi bi-star-fill"></i></span>
                        </div>
                        <button type="submit" class="btn btn-primary mt-2">Update Rating</button>
                    </form>
                }
                else
                {
                    <form method="post" action="@Url.Action("SubmitRating", "Recipes")">
                        <input type="hidden" name="recipeId" value="@Model.RecipeId" />
                        <input type="hidden" name="rating" id="ratingInput" value="0" />
                        <div class="star-rating" id="starRating">
                            <span data-value="1"><i class="bi bi-star-fill"></i></span>
                            <span data-value="2"><i class="bi bi-star-fill"></i></span>
                            <span data-value="3"><i class="bi bi-star-fill"></i></span>
                            <span data-value="4"><i class="bi bi-star-fill"></i></span>
                            <span data-value="5"><i class="bi bi-star-fill"></i></span>
                        </div>
                        <button type="submit" class="btn btn-primary mt-2">Submit Rating</button>
                    </form>
                }
            </div>
            @if (TempData["RatingError"] != null)
            {
                <div class="alert alert-danger mt-2">@TempData["RatingError"]</div>
            }
            @if (TempData["RatingSuccess"] != null)
            {
                <div class="alert alert-success mt-2">@TempData["RatingSuccess"]</div>
            }
        }
        else
        {
            <p class="alert alert-warning">Please <a href="@Url.Action("Login", "Account")">login</a> to rate this recipe.</p>
        }
    </div>

    <div class="mb-3 comment-section">
        <h4>Comments</h4>
        @if (Model.RecipeComments != null && Model.RecipeComments.Any(c => c.IsVisible))
        {
            <ul class="list-group">
                @foreach (var comment in Model.RecipeComments.Where(c => c.IsVisible))
                {
                    <li class="list-group-item">
                        <strong>@comment.User?.FullName</strong>
                        <small class="text-muted">(@comment.CreatedAt.ToString("g"))</small>
                        <p>@comment.CommentText</p>
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="text-muted">No comments yet.</p>
        }
    </div>
    @if (TempData["CommentError"] != null)
    {
        <div class="alert alert-danger">
            @TempData["CommentError"]
        </div>
    }
    @if (currentUserId != null)
    {
        <div class="mb-3">
            <h5>Leave a Comment</h5>
            <form method="post" action="@Url.Action("SubmitComment", "Recipes")">
                <input type="hidden" name="recipeId" value="@Model.RecipeId" />
                <div class="form-group">
                    <textarea name="commentText" rows="3" class="form-control" placeholder="Your comment..." required></textarea>
                </div>
                <button type="submit" class="btn btn-primary mt-2">Submit Comment</button>
            </form>
        </div>
    }
    else
    {
        <p><em>Please <a href="@Url.Action("Login", "Account")">login</a> to leave a comment.</em></p>
    }

    <a href="@Url.Action("FreeRecipes", "Recipes")" class="btn btn-secondary">Back</a>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const starContainer = document.getElementById("starRating");
        const stars = starContainer.querySelectorAll("span");
        const ratingInput = document.getElementById("ratingInput");
        const currentRatingDisplay = document.getElementById("currentRating");

        // Hàm cập nhật sao
        function updateStars(rating) {
            stars.forEach((star, index) => {
                if (index < rating) {
                    star.classList.add("filled");
                } else {
                    star.classList.remove("filled");
                }
            });
            ratingInput.value = rating; // Cập nhật giá trị input ẩn
            if (currentRatingDisplay) {
                currentRatingDisplay.textContent = rating; // Cập nhật hiển thị
            }
            console.log("Selected rating: " + rating); // Debug
        }

        // Khởi tạo trạng thái ban đầu
        const initialRating = @Html.Raw(userRating != null ? userRating.Rating : 0);
        updateStars(initialRating);

        // Xử lý khi nhấp sao
        stars.forEach(star => {
            star.addEventListener("click", function () {
                const rating = parseInt(this.getAttribute("data-value"));
                updateStars(rating);
            });
        });
    });
</script>